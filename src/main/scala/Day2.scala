import scala.util.Try
import scala.util.Failure
import scala.util.Success

object Day2 {

  trait Direction
  case object Forward extends Direction
  case object Down extends Direction
  case object Up extends Direction

  case class Step(direction: Direction, value: Int)

  object Step {
    def apply(string: String): Step = {
      string.split(" ") match {
        case Array("forward", value: String) => Step(Forward, value.toInt)
        case Array("down", value: String)    => Step(Down, value.toInt)
        case Array("up", value: String)      => Step(Up, value.toInt)
        case _                               => ???
      }
    }
  }

  val myInput = List(
    "forward 3",
    "down 9",
    "forward 6",
    "down 3",
    "forward 8",
    "down 3",
    "down 4",
    "forward 3",
    "forward 5",
    "up 7",
    "forward 1",
    "forward 1",
    "forward 5",
    "down 8",
    "down 5",
    "forward 3",
    "forward 2",
    "forward 4",
    "down 7",
    "up 2",
    "up 2",
    "down 5",
    "down 5",
    "down 8",
    "down 2",
    "down 4",
    "forward 8",
    "forward 8",
    "up 2",
    "down 2",
    "up 8",
    "up 4",
    "forward 7",
    "up 8",
    "down 6",
    "forward 9",
    "forward 6",
    "forward 5",
    "up 1",
    "forward 6",
    "forward 8",
    "down 4",
    "forward 6",
    "up 8",
    "down 9",
    "forward 1",
    "down 1",
    "up 8",
    "down 5",
    "down 7",
    "forward 7",
    "up 8",
    "forward 4",
    "forward 5",
    "up 9",
    "down 4",
    "forward 4",
    "up 5",
    "down 6",
    "forward 3",
    "forward 2",
    "forward 3",
    "forward 6",
    "up 4",
    "up 7",
    "forward 6",
    "forward 2",
    "down 1",
    "forward 3",
    "forward 3",
    "forward 2",
    "down 6",
    "forward 2",
    "forward 4",
    "forward 9",
    "forward 1",
    "up 6",
    "forward 7",
    "down 6",
    "down 7",
    "forward 6",
    "up 4",
    "down 7",
    "up 9",
    "up 2",
    "down 6",
    "down 6",
    "forward 9",
    "down 2",
    "forward 5",
    "up 3",
    "up 6",
    "forward 3",
    "forward 3",
    "up 8",
    "forward 1",
    "forward 9",
    "forward 9",
    "up 6",
    "forward 3",
    "forward 2",
    "forward 8",
    "up 8",
    "forward 5",
    "up 6",
    "forward 9",
    "down 4",
    "down 5",
    "forward 7",
    "down 6",
    "forward 8",
    "up 9",
    "forward 2",
    "down 8",
    "up 4",
    "forward 7",
    "down 9",
    "forward 5",
    "forward 7",
    "down 4",
    "forward 3",
    "forward 7",
    "forward 4",
    "forward 7",
    "forward 4",
    "up 1",
    "down 1",
    "down 6",
    "up 4",
    "forward 2",
    "down 5",
    "down 8",
    "down 1",
    "up 2",
    "down 6",
    "down 3",
    "forward 5",
    "forward 5",
    "down 5",
    "forward 3",
    "forward 3",
    "down 9",
    "down 9",
    "up 5",
    "down 5",
    "down 3",
    "forward 2",
    "down 1",
    "up 6",
    "down 1",
    "down 3",
    "down 7",
    "forward 3",
    "forward 5",
    "forward 7",
    "up 9",
    "up 9",
    "down 1",
    "forward 2",
    "up 4",
    "down 1",
    "up 4",
    "forward 3",
    "forward 5",
    "down 2",
    "forward 7",
    "down 6",
    "down 2",
    "forward 7",
    "forward 7",
    "down 9",
    "up 4",
    "down 6",
    "down 1",
    "down 5",
    "down 5",
    "down 3",
    "down 1",
    "forward 9",
    "forward 4",
    "up 8",
    "down 1",
    "up 7",
    "down 7",
    "down 8",
    "up 2",
    "down 9",
    "down 2",
    "forward 3",
    "forward 6",
    "forward 5",
    "forward 2",
    "forward 6",
    "down 4",
    "forward 5",
    "up 5",
    "forward 3",
    "down 4",
    "forward 3",
    "down 4",
    "forward 9",
    "forward 7",
    "forward 9",
    "forward 7",
    "up 4",
    "down 3",
    "forward 5",
    "forward 9",
    "forward 9",
    "down 5",
    "forward 9",
    "down 1",
    "down 3",
    "forward 2",
    "forward 5",
    "forward 8",
    "down 6",
    "down 4",
    "forward 1",
    "up 6",
    "down 8",
    "up 4",
    "up 8",
    "forward 3",
    "down 3",
    "down 2",
    "forward 3",
    "forward 4",
    "down 9",
    "down 4",
    "forward 6",
    "up 5",
    "forward 6",
    "up 1",
    "down 3",
    "forward 9",
    "down 5",
    "down 4",
    "forward 9",
    "up 6",
    "forward 9",
    "forward 2",
    "down 1",
    "forward 7",
    "forward 5",
    "down 4",
    "forward 6",
    "down 6",
    "up 3",
    "up 8",
    "down 6",
    "forward 8",
    "forward 3",
    "down 6",
    "down 3",
    "down 3",
    "up 6",
    "up 6",
    "up 1",
    "forward 7",
    "up 2",
    "forward 5",
    "forward 5",
    "up 3",
    "forward 7",
    "up 3",
    "down 7",
    "down 1",
    "forward 9",
    "forward 7",
    "down 1",
    "forward 7",
    "forward 8",
    "forward 2",
    "down 1",
    "up 3",
    "down 6",
    "forward 5",
    "forward 4",
    "forward 2",
    "down 8",
    "forward 3",
    "down 9",
    "down 4",
    "up 9",
    "down 2",
    "down 6",
    "up 2",
    "up 9",
    "forward 1",
    "down 8",
    "forward 3",
    "down 4",
    "down 2",
    "forward 9",
    "forward 2",
    "down 3",
    "down 8",
    "down 7",
    "down 7",
    "up 2",
    "down 7",
    "down 2",
    "down 4",
    "forward 8",
    "forward 1",
    "down 5",
    "forward 2",
    "forward 1",
    "forward 6",
    "down 7",
    "forward 1",
    "down 4",
    "forward 1",
    "up 7",
    "down 7",
    "forward 2",
    "down 4",
    "forward 9",
    "up 1",
    "forward 7",
    "forward 3",
    "forward 3",
    "down 2",
    "down 6",
    "up 1",
    "down 1",
    "down 7",
    "forward 2",
    "forward 6",
    "down 5",
    "up 4",
    "down 9",
    "up 6",
    "forward 1",
    "forward 4",
    "down 9",
    "up 7",
    "down 8",
    "up 6",
    "down 8",
    "down 5",
    "down 5",
    "down 2",
    "forward 7",
    "forward 2",
    "up 2",
    "up 9",
    "forward 6",
    "down 9",
    "down 6",
    "forward 3",
    "down 8",
    "forward 3",
    "forward 2",
    "down 9",
    "forward 5",
    "up 3",
    "forward 5",
    "down 1",
    "up 1",
    "down 3",
    "forward 1",
    "forward 5",
    "down 7",
    "forward 8",
    "forward 6",
    "down 4",
    "down 9",
    "forward 5",
    "forward 2",
    "down 8",
    "down 3",
    "down 6",
    "down 2",
    "down 1",
    "forward 6",
    "forward 1",
    "forward 6",
    "up 9",
    "down 4",
    "up 7",
    "forward 5",
    "up 6",
    "down 3",
    "forward 6",
    "forward 3",
    "forward 2",
    "forward 2",
    "up 1",
    "down 9",
    "forward 2",
    "forward 3",
    "up 1",
    "forward 3",
    "forward 2",
    "down 4",
    "down 8",
    "up 9",
    "up 1",
    "forward 4",
    "up 2",
    "down 6",
    "forward 3",
    "down 5",
    "up 5",
    "up 7",
    "down 1",
    "forward 1",
    "forward 7",
    "down 4",
    "forward 4",
    "forward 2",
    "forward 8",
    "down 7",
    "down 8",
    "down 8",
    "forward 5",
    "forward 8",
    "down 5",
    "forward 3",
    "down 3",
    "down 1",
    "forward 2",
    "forward 7",
    "forward 2",
    "forward 6",
    "forward 3",
    "forward 7",
    "up 6",
    "down 5",
    "forward 6",
    "down 5",
    "down 7",
    "forward 6",
    "up 5",
    "down 9",
    "down 3",
    "forward 1",
    "forward 1",
    "forward 3",
    "down 9",
    "forward 1",
    "down 9",
    "down 9",
    "down 4",
    "down 2",
    "down 5",
    "up 6",
    "forward 1",
    "down 7",
    "down 2",
    "forward 9",
    "down 8",
    "down 2",
    "forward 7",
    "down 8",
    "forward 2",
    "up 8",
    "up 6",
    "forward 9",
    "down 7",
    "forward 1",
    "down 4",
    "down 7",
    "forward 1",
    "forward 4",
    "down 1",
    "forward 9",
    "down 1",
    "up 2",
    "up 4",
    "forward 3",
    "down 4",
    "forward 7",
    "forward 1",
    "up 7",
    "up 4",
    "forward 7",
    "forward 2",
    "forward 5",
    "down 7",
    "down 9",
    "forward 4",
    "forward 6",
    "down 9",
    "forward 6",
    "up 8",
    "forward 3",
    "forward 2",
    "forward 3",
    "forward 9",
    "down 7",
    "down 4",
    "down 7",
    "down 7",
    "down 5",
    "forward 7",
    "down 1",
    "forward 3",
    "up 3",
    "down 1",
    "up 7",
    "up 7",
    "up 4",
    "forward 9",
    "down 8",
    "up 4",
    "forward 6",
    "forward 8",
    "down 8",
    "forward 1",
    "down 6",
    "forward 1",
    "forward 4",
    "up 8",
    "forward 3",
    "up 6",
    "up 1",
    "down 4",
    "up 1",
    "forward 8",
    "up 1",
    "forward 7",
    "down 1",
    "up 9",
    "down 3",
    "forward 4",
    "down 6",
    "down 7",
    "forward 7",
    "forward 4",
    "down 1",
    "up 3",
    "forward 3",
    "up 7",
    "up 9",
    "up 9",
    "forward 7",
    "down 8",
    "forward 5",
    "up 2",
    "forward 7",
    "forward 8",
    "down 2",
    "down 6",
    "down 1",
    "down 1",
    "down 5",
    "down 5",
    "up 5",
    "forward 1",
    "forward 3",
    "down 9",
    "down 6",
    "forward 9",
    "forward 1",
    "down 4",
    "forward 7",
    "forward 6",
    "up 4",
    "down 8",
    "down 9",
    "forward 3",
    "down 9",
    "up 5",
    "forward 3",
    "up 1",
    "forward 3",
    "forward 1",
    "forward 8",
    "up 6",
    "down 6",
    "forward 9",
    "forward 7",
    "forward 8",
    "down 1",
    "forward 9",
    "forward 1",
    "forward 3",
    "forward 6",
    "down 1",
    "down 9",
    "down 9",
    "forward 1",
    "down 2",
    "down 5",
    "forward 7",
    "forward 6",
    "down 5",
    "forward 8",
    "forward 1",
    "forward 5",
    "forward 6",
    "down 6",
    "down 9",
    "down 7",
    "forward 7",
    "down 2",
    "down 2",
    "up 2",
    "forward 9",
    "forward 4",
    "forward 2",
    "up 9",
    "forward 3",
    "forward 1",
    "forward 6",
    "down 4",
    "down 9",
    "down 9",
    "down 1",
    "down 3",
    "down 1",
    "forward 5",
    "down 7",
    "forward 9",
    "forward 7",
    "forward 4",
    "forward 7",
    "forward 8",
    "forward 5",
    "down 8",
    "down 1",
    "up 1",
    "forward 9",
    "forward 9",
    "down 4",
    "up 7",
    "up 3",
    "down 1",
    "forward 5",
    "forward 2",
    "down 6",
    "down 6",
    "up 3",
    "down 6",
    "up 7",
    "forward 2",
    "forward 2",
    "forward 8",
    "down 3",
    "up 5",
    "down 4",
    "forward 5",
    "down 4",
    "forward 8",
    "down 5",
    "down 2",
    "forward 6",
    "down 2",
    "down 3",
    "down 5",
    "up 6",
    "down 7",
    "forward 6",
    "forward 2",
    "down 8",
    "up 1",
    "up 1",
    "forward 2",
    "down 3",
    "forward 3",
    "down 8",
    "down 4",
    "forward 1",
    "down 2",
    "forward 6",
    "up 3",
    "forward 8",
    "down 6",
    "up 7",
    "forward 2",
    "forward 9",
    "forward 4",
    "forward 4",
    "up 7",
    "forward 6",
    "up 1",
    "forward 1",
    "forward 3",
    "down 4",
    "up 7",
    "forward 8",
    "forward 4",
    "down 8",
    "forward 4",
    "down 8",
    "forward 9",
    "down 3",
    "down 4",
    "up 6",
    "up 1",
    "forward 7",
    "up 3",
    "forward 5",
    "forward 4",
    "forward 5",
    "forward 7",
    "forward 1",
    "down 3",
    "up 5",
    "forward 7",
    "forward 4",
    "down 9",
    "down 6",
    "down 7",
    "up 3",
    "up 7",
    "up 8",
    "up 9",
    "down 4",
    "up 1",
    "forward 1",
    "up 3",
    "forward 6",
    "down 8",
    "forward 4",
    "down 7",
    "down 5",
    "down 4",
    "forward 7",
    "forward 5",
    "down 4",
    "down 7",
    "up 5",
    "down 2",
    "down 1",
    "down 8",
    "forward 7",
    "down 4",
    "forward 5",
    "up 9",
    "down 3",
    "up 2",
    "down 3",
    "forward 2",
    "forward 2",
    "forward 8",
    "down 2",
    "down 3",
    "forward 2",
    "down 6",
    "forward 9",
    "down 6",
    "down 1",
    "down 8",
    "down 3",
    "forward 4",
    "forward 4",
    "forward 4",
    "up 8",
    "forward 8",
    "up 4",
    "down 1",
    "forward 5",
    "down 9",
    "forward 7",
    "up 9",
    "up 3",
    "down 9",
    "down 8",
    "forward 3",
    "forward 4",
    "forward 5",
    "forward 4",
    "up 7",
    "down 2",
    "up 5",
    "forward 6",
    "down 3",
    "forward 6",
    "down 8",
    "down 3",
    "down 3",
    "down 4",
    "forward 8",
    "down 9",
    "down 2",
    "forward 2",
    "down 7",
    "forward 3",
    "up 2",
    "forward 4",
    "down 8",
    "forward 2",
    "forward 9",
    "forward 3",
    "down 6",
    "forward 9",
    "down 7",
    "forward 1",
    "forward 2",
    "forward 4",
    "forward 4",
    "up 4",
    "up 2",
    "down 7",
    "forward 9",
    "forward 9",
    "forward 7",
    "up 7",
    "down 2",
    "down 9",
    "forward 8",
    "down 5",
    "up 2",
    "down 6",
    "forward 9",
    "up 3",
    "down 5",
    "down 4",
    "forward 9",
    "forward 3",
    "down 6",
    "down 8",
    "up 5",
    "up 3",
    "down 2",
    "forward 9",
    "down 3",
    "forward 6",
    "down 9",
    "forward 5",
    "down 6",
    "up 6",
    "down 6",
    "forward 6",
    "forward 1",
    "down 3",
    "down 3",
    "up 8",
    "forward 1",
    "forward 4",
    "up 2",
    "forward 3",
    "forward 1",
    "forward 8",
    "forward 7",
    "down 7",
    "down 4",
    "down 6",
    "down 2",
    "forward 3",
    "down 2",
    "forward 6",
    "up 3",
    "down 9",
    "down 2",
    "forward 6",
    "down 6",
    "forward 5",
    "forward 2",
    "up 4",
    "forward 5",
    "up 5",
    "up 5",
    "up 3",
    "forward 9",
    "down 7",
    "forward 4",
    "down 7",
    "up 5",
    "down 3",
    "forward 5",
    "forward 3",
    "down 7",
    "up 2",
    "down 5",
    "forward 9",
    "forward 7",
    "up 7",
    "forward 5",
    "up 5",
    "down 1",
    "up 7",
    "forward 9",
    "down 8",
    "forward 2",
    "forward 8",
    "down 7",
    "down 3",
    "down 1",
    "up 7",
    "forward 4",
    "down 3",
    "forward 1",
    "forward 1",
    "forward 6",
    "up 7",
    "up 1",
    "forward 2",
    "down 8",
    "down 4",
    "down 2",
    "down 6",
    "forward 5",
    "down 7",
    "down 8",
    "down 7",
    "down 5",
    "down 5",
    "forward 1",
    "down 9",
    "forward 5",
    "down 6",
    "down 9",
    "up 3",
    "down 4",
    "forward 3",
    "down 6",
    "up 6",
    "forward 8",
    "forward 8",
    "forward 2",
    "down 2",
    "up 1",
    "forward 6",
    "forward 6",
    "up 9",
    "up 4",
    "forward 9",
    "up 7",
    "up 6",
    "down 2",
    "down 3",
    "up 7",
    "down 7",
    "forward 4",
    "forward 8",
    "down 3",
    "forward 1",
    "down 2",
    "forward 9",
    "forward 4",
    "forward 6",
    "down 7",
    "up 9",
    "forward 9",
    "forward 1",
    "forward 2",
    "down 1",
    "down 8",
    "down 7",
    "forward 3",
    "down 4",
    "down 9",
    "forward 2",
    "up 2",
    "forward 3",
    "up 3",
    "down 9",
    "down 2",
    "forward 3",
    "down 3",
    "forward 7",
    "forward 6",
    "down 6",
    "down 7",
    "forward 2",
    "down 9",
    "up 3",
    "down 6",
    "forward 3",
    "down 2",
    "down 1",
    "up 6",
    "down 3",
    "down 3",
    "down 1",
    "down 5",
    "down 3",
    "up 4",
    "down 2",
    "forward 5",
    "down 2",
    "down 8",
    "down 2",
    "down 5",
    "forward 9",
    "forward 4",
    "down 4",
    "down 2",
    "down 8",
    "forward 9",
    "down 8",
    "forward 1",
    "up 6",
    "forward 6",
    "down 7",
    "down 1",
    "down 2",
    "down 8",
    "down 8",
    "up 8",
    "forward 6",
    "forward 8",
    "forward 9",
    "forward 2",
    "forward 5"
  )

  def readInput(input: List[String]): List[Step] = input.map(Step(_))

  def dayTwoFirst: Int = {
    val steps = readInput(myInput)
    calculatePosition(steps, 0, 0)
  }

  def dayTwoSecond: Int = {
    val steps = readInput(myInput)
    calculatePosition(steps, 0, 0, 0)
  }

  def calculatePosition(input: List[Step], horiozntal: Int, depth: Int): Int = {
    Try(input.head) match {
      case Success(Step(direction, value)) =>
        direction match {
          case Up   => calculatePosition(input.tail, horiozntal, depth - value)
          case Down => calculatePosition(input.tail, horiozntal, depth + value)
          case Forward =>
            calculatePosition(input.tail, horiozntal + value, depth)
        }
      case Failure(_) => horiozntal * depth
    }
  }

  def calculatePosition(
      input: List[Step],
      horiozntal: Int,
      depth: Int,
      aim: Int
  ): Int = {
    Try(input.head) match {
      case Success(Step(direction, value)) =>
        direction match {
          case Up =>
            calculatePosition(input.tail, horiozntal, depth, aim - value)
          case Down =>
            calculatePosition(input.tail, horiozntal, depth, aim + value)
          case Forward =>
            calculatePosition(
              input.tail,
              horiozntal + value,
              depth + (aim * value),
              aim
            )
        }
      case Failure(_) => horiozntal * depth
    }
  }

}
